version: '3.8'

services:
  # DynamoDB Local for development
  dynamodb-local:
    image: amazon/dynamodb-local:latest
    container_name: ai-lifestyle-dynamodb
    ports:
      - "8000:8000"
    command: "-jar DynamoDBLocal.jar -sharedDb -inMemory"
    environment:
      AWS_ACCESS_KEY_ID: local
      AWS_SECRET_ACCESS_KEY: local
      AWS_REGION: us-east-1

  # LocalStack for other AWS services (optional)
  localstack:
    image: localstack/localstack:latest
    container_name: ai-lifestyle-localstack
    ports:
      - "4566:4566"  # LocalStack gateway
      - "4571:4571"  # Elasticsearch
    environment:
      - SERVICES=lambda,apigateway,cloudwatch,logs,xray,iam,ecr
      - DEBUG=1
      - LAMBDA_EXECUTOR=docker
      - DOCKER_HOST=unix:///var/run/docker.sock
      - AWS_ACCESS_KEY_ID=test
      - AWS_SECRET_ACCESS_KEY=test
      - AWS_DEFAULT_REGION=us-east-1
    volumes:
      - "/var/run/docker.sock:/var/run/docker.sock"
      - "./scripts/localstack:/docker-entrypoint-initaws.d"

  # Lambda API (for local testing)
  lambda-api:
    build:
      context: .
      dockerfile: Dockerfile.api-handler
      args:
        ENVIRONMENT: dev
    container_name: ai-lifestyle-lambda-api
    ports:
      - "9000:8080"
    environment:
      - AWS_ACCESS_KEY_ID=local
      - AWS_SECRET_ACCESS_KEY=local
      - AWS_REGION=us-east-1
      - ENVIRONMENT=local
      - TABLE_NAME=users-local
      - DYNAMODB_ENDPOINT=http://dynamodb-local:8000
      - LOG_LEVEL=DEBUG
    depends_on:
      - dynamodb-local
    volumes:
      - ./src:/var/task:ro

  # Lambda Health Check (for local testing)
  lambda-health:
    build:
      context: .
      dockerfile: Dockerfile.health-check
      args:
        ENVIRONMENT: dev
    container_name: ai-lifestyle-lambda-health
    ports:
      - "9001:8080"
    environment:
      - AWS_ACCESS_KEY_ID=local
      - AWS_SECRET_ACCESS_KEY=local
      - AWS_REGION=us-east-1
      - ENVIRONMENT=local
      - TABLE_NAME=main-local
      - DYNAMODB_ENDPOINT=http://dynamodb-local:8000
      - LOG_LEVEL=DEBUG
    depends_on:
      - dynamodb-local
    volumes:
      - ./src:/var/task:ro

  # DynamoDB Admin UI (optional but helpful)
  dynamodb-admin:
    image: aaronshaf/dynamodb-admin:latest
    container_name: ai-lifestyle-dynamodb-admin
    ports:
      - "8001:8001"
    environment:
      - DYNAMO_ENDPOINT=http://dynamodb-local:8000
      - AWS_REGION=us-east-1
      - AWS_ACCESS_KEY_ID=local
      - AWS_SECRET_ACCESS_KEY=local
    depends_on:
      - dynamodb-local

networks:
  default:
    name: ai-lifestyle-network
