version: '3.8'

services:
  # Backend services
  dynamodb-local:
    image: amazon/dynamodb-local:latest
    container_name: ai-lifestyle-dynamodb
    ports:
      - "8000:8000"
    command: "-jar DynamoDBLocal.jar -sharedDb -inMemory"

  lambda-api:
    build:
      context: ./backend
      dockerfile: Dockerfile.api-handler
      args:
        ENVIRONMENT: dev
    container_name: ai-lifestyle-lambda-api
    ports:
      - "9000:8080"
    environment:
      - AWS_ACCESS_KEY_ID=local
      - AWS_SECRET_ACCESS_KEY=local
      - AWS_REGION=us-east-1
      - ENVIRONMENT=local
      - TABLE_NAME=users-local
      - DYNAMODB_ENDPOINT=http://dynamodb-local:8000
    depends_on:
      - dynamodb-local
    volumes:
      - ./backend/src:/var/task:ro

  # Frontend development server
  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile.dev
    container_name: ai-lifestyle-frontend
    ports:
      - "3000:3000"
    environment:
      - VITE_API_URL=http://localhost:9000
    volumes:
      - ./frontend/src:/app/src
      - ./frontend/public:/app/public
      - ./shared:/app/shared
    depends_on:
      - lambda-api

  # DynamoDB Admin
  dynamodb-admin:
    image: aaronshaf/dynamodb-admin:latest
    container_name: ai-lifestyle-dynamodb-admin
    ports:
      - "8001:8001"
    environment:
      - DYNAMO_ENDPOINT=http://dynamodb-local:8000
    depends_on:
      - dynamodb-local

networks:
  default:
    name: ai-lifestyle-network
